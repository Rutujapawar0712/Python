Loops:
 It is used to repeat instructions.

■ 1) While Loop:

⫸ Syntax:

Create Iterator
While Condition:
  Statement 
  Iteration ↑ / ↓


# Code - While Loop
i)
Count = 1                     # Count is Iterator
while Count <= 5:             # Stopping Condition
  print(Count)
  Count += 1                  # Loop 1 = Iteration 1

- O/P.:
1
2
3
4
5



⫸ Break & Continue:

⫸ Break:
    It is used to terminate the loop when encountered.

# Code - Break
i)
Count = 1                     
while Count <= 5:            
  print(Count)
  
  if (Count == 3):
    break

  Count += 1

- O/P.:
1
2
3



⫸ Continue:
    Terminates execution in the current iteration & 
    Continues execution in the next iteration.

# Code - Continue
i)
Count = 1                     
while Count <= 5 :            
 
  if (Count == 3):
    Count += 1
    continue               # Loop Skip that Condition

  print(Count)
  Count += 1

- O/P.:
1
2
4
5




2) For Loop:
    It is used for sequential tranversal. For transversing String, List, Tuple, etc.

 ■ i) For Loop:

⫸ Syntax:

Create Literal
for x in Literal:
  print(x)


# Code - For Loop
i)
String = "Python"
for Char in String:
  print(Char)

- O/P.:
P
y
t
h
o
n



 ■ ii) For Loop with Else:
        Else code is executed only when the entire loop has finished without a break statement.

⫸ Syntax:

Create Literal
for x in Literal:
  print(x)
else:             
  Statement


# Code - For Loop with Else
i)
String = "Python"

for Char in String:
  if (Char == 'o'):
    break
  print(Char)

else:
  print("End")

- O/P.:
P
y
t
h



⫸ Range in Loop:
    Start index and Step is optional

⫸ Syntax:

range(Start,     Stop*   , Step)
range(  0  , len(Literal),  1  )       # Default


# Code - Range in Loop
i)
for no in range(5):
  print(no)

- O/P.:
0
1
2
3
4
