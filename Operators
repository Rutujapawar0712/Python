4) Operators: 
    It is Symbol to perform a certain operation between operands.

 ■ i) Arithmetic Operators: 
       Addition (+), Subtraction (-), Multiplication	(*), Exponentiation (**), Division (/), Modulus (%), Floor division (//)


# Code - Modulus (%) operator
i)
a, b = 10, 20
print(a % b)                  # Output = Remainder

- O/P.: 
10


# Code - Floor division (//) operator
i)
a, b = 10, 20
print(a // b)                 # Output = Integer Quotient 

- O/P.: 
0



 ■ ii) Assignment Operators: 
        It performed the certain operations and assign answer to left side variable.

        Equal (=), Add and Assign (+=), Subtract and Assign (-=), Multiply and Assign (*=), Exponent and Assign (**=), 

        Divide and Assign (/=), Modulus and Assign (%=), Divide(floor) and Assign (//=), 
        
        Bitwise AND (&=), Bitwise OR (|=), Bitwise XOR (^=), Bitwise Right Shift(>>=), Bitwise Left Shift(<<=)


# Code - Exponent and Assign (**=) operator
i)
a, b = 10, 20
a **= b                       # a = a**b
print("a = ", a)
print("b = ", b)

- O/P.:  
a = 100000000000000000000 
b = 20


# Code - Bitwise Left Shift (<<=) operator
i)
a, b = 10, 20
a <<= b                       # a = a<<b
print("a = ", a)
print("b = ", b)

- O/P.:  
a = 10485760 
b = 20



 ■ iii) Relational / Comparison Operators: 
         Equal (==), Not Equal (!=), Greater than (>), Less than (<), Greater than or equal to (>=), Less than or equal to (<=)


# Code - Not Equal	(!=) operator
i)
a, b = 10, 20 
print(a != b) 

- O/P.:  
True


# Code - Greater than or equal to (>=) operator
i)
a, b = 10, 20 
print(a >= b) 

- O/P.:  
False



 ■ iv) Bitwise Operators:
        Bitwise AND (&), Bitwise OR (|), Bitwise NOT (~), Bitwise XOR (^), Bitwise Right Shift (>>), Bitwise Left Shift (<<)


# Code - Bitwise NOT (~) operator
i)
a, b = 10, 20
print(~ a)   

- O/P.: 
-11


# Code - Bitwise Right Shift (>>) operator
i)
a, b = 10, 20
print(a >> b) 

- O/P.: 
0

