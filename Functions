Functions:
 A function is a block of code which only runs when it is called. It increases code Readability, Reusability.

⫸ Syntax:

def Function_Name(Parameter1, Parameter2, ...)         # Function Defination
  Statement                                            # Code
  return expression                                    # Returns Output of Function

Function_Name(Argument1, Argument2, ...)               # Function Call


# Code - Calling a Function
i)
def Greeting():
  print("Hello")

Greeting()

- O/P.:
Hello


# Code - Passing an Argument
i)
def Sum (a, b):
  Total = a + b
  print(Total)
  return Total

Sum (1, 2)

- O/P.:
3



⫸ Default Parameters:
    Assigning a default value to parameters, which is used when no arguments are passed.

# Code - Default Parameters
i)
def Subject (Language = "Python"):      # Assign Default Parameter
  print("I am learning", Language)

Subject ("HTML")
Subject ()                              # No Argument

- O/P.:
I am learning HTML
I am learning Python


ii)
def Sum (a = 1, b):                     # Invalid - Always initiate with Default Parameter
or
def Sum (b, a = 1):                     # Valid
  Total = a + b
  print(Total)

Sum (2)

- O/P.:
3



Arguments:

⫸ 1) Arbitrary Arguments:
       If no. of arguments are not confirm, add a * before the parameter name in the function definition. 
       This way the function will receive a tuple of arguments, and can access the items accordingly.

# Code - Arbitrary Arguments
i)
def Language(*Subject):
  print("I am learning ", Subject[0])

Language("Python", "HTML", "CSS")

- O/P.:
I am learning Python



⫸ 2) Keyword Arguments:
      It can written as arguments with the key = value syntax. This way the Position of the arguments does not matter.

# Code - Keyword Arguments
i)
def Language(Sub1, Sub2, Sub3):
  print("I am learning ", Sub1)

Language(Sub2 = "HTML", Sub1 = "Python", Sub3 = "CSS")

- O/P.:
I am learning Python



⫸ 3) Arbitrary Keyword Arguments:
       If no. of keyword parameters are not confirmed, add ** before the parameter name in the function definition.
       This way the function will receive a dictionary of arguments, and can access the items accordingly:

# Code - Arbitrary Keyword Arguments
i)
def Language(**Subjects):
  print("I am learning ", Subjects["Sub1"])

Language(Sub2 = "HTML", Sub1 = "Python", Sub3 = "CSS")

- O/P.:
I am learning Python

